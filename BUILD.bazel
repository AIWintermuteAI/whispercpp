load("@com_github_bazelbuild_buildtools//buildifier:def.bzl", "buildifier")
load("@pybind11_bazel//:build_defs.bzl", "pybind_extension")
load("@rules_cc//cc:defs.bzl", "cc_library")
load("@rules_python//python:defs.bzl", "py_library")
load("@rules_python//python:packaging.bzl", "py_package", "py_wheel")

package(default_visibility = ["//visibility:public"])

cc_library(
    name = "context",
    srcs = [
        "//src/whispercpp:context.cc",
        "//src/whispercpp:context.h",
    ],
    hdrs = [
        "//src/whispercpp:context.h",
        "@com_github_ggerganov_whisper//:whisper.h",
    ],
    defines = ["BAZEL_BUILD"],
    deps = [
        "@com_github_ggerganov_whisper//:whisper",
        "@pybind11",
    ],
)

pybind_extension(
    name = "api",
    srcs = [
        "//src/whispercpp:api_export.cc",
        "//src/whispercpp:context.h",
        "@com_github_ggerganov_whisper//:whisper.h",
    ],
    copts = [
        "-O3",
        "-pthread",
        "-std=c++11",
        "-fPIC",
        "-Wall",
    ],
    defines = ["BAZEL_BUILD"],
    deps = [":context"],
)

py_library(
    name = "whispercpp_lib",
    srcs = ["//src/whispercpp:__init__.py"],
    data = [
        ":api.so",
        "//src/whispercpp:api.pyi",
    ],
)

py_package(
    name = "whispercpp_pkg",
    packages = ["src.whispercpp"],
    deps = [":whispercpp_lib"],
)

py_wheel(
    name = "whispercpp_wheel",
    distribution = "whispercpp",
    python_tag = "py3",
    version = "0.0.1",
    deps = [
        ":api.so",
        ":whispercpp_pkg",
    ],
)

filegroup(
    name = "pyproject",
    srcs = ["pyproject.toml"],
)

buildifier(
    name = "buildifier",
)
